[{"title":"Angular-模块","date":"2017-07-15T08:39:05.000Z","path":"2017/07/15/angular-module/","text":"应用模块化Angular采用模块的形式来组织应用，将相关业务功能或者有内部联系的部分进行内聚化设计，封装成单独的模块，而整个应该则由多个模块来构成模块化时一种设计模式，有着明显的优点: 打包特定领域/工作流的功能,隔离功能实现 方便组织应用，多个模块可独立开发 方便导入使用外部控件，很多Angular库和第三方库都是以模块形式提供，例如：FormsModule、HttpModule、RouterModule，Material Design、 Ionic 方便把服务加到应用程序中 模块化带来应用设计的简单化，应用组织就像搭积木一样方便，像这样： 模块的组成模块在angular里只是由@NgModule装饰器提供元数据的类，这个元数据对象指示如何编译和运行该模块，基本构成： @NgModule({ imports:[], //导入其它模块，从其它模块中获得本模块所需的组件、指令和管道 declarations: [], // 声明哪些组件指令管道属于该模块 providers: [] //声明服务提供商 exports: [] //公开某些类，以便其它的组件模板可以使用它们 }) export class ContactModule { } (1) imports模块导入支持模块，会发生几件事： 被导入模块公开的组件/指令/管道将和导入目标模块declarations合并，并供目标模块使用，但导入的成员优先级没目标模块的高 被导入模块的providers会累加到导入目标模块的提供商，追加到@NgModule.providers中，并把它们注入到目标模块一级的注入器，比如导入到根模块，则注入到根注入器 被导入的模块的路由和导入目标模块路由将合并 (2) declarations[]该数组声明本模块所拥有的组件，指令，管道等成员，数组里成员有以下特点： 数组里声明的成员默认都是私有的，除非放进exports公开他们 一个组件/指令/管道只能属于一个模块，不能同时把一个类声明在几个模块中 数组里的成员可以公开给其他模块直接导入使用 (3) providers[]模块是为模块中所有成员提供服务的最佳途径，在模块中声明服务提供商有几个特点： 模块内声明的服务商是模块级的，可供模块所有组件或其他成员使用 如果此模块被直接导入到根模块时，服务商注册到根注入器，整个应用都可使用 如果此模块被导入到延迟模块，则注入到模块子注入器，可供延迟模块内使用 延迟加载模块是限制服务商在模块内生效的唯一途径 (3) exports[]设置公开成员，至于在公开数组里声明的成员才能其他模块导入使用，可供导出的成员类型有如下几种： declarations数组中的成员 imports数组中的模块 不在imports数组中的其他模块(可不导入就直接导出) 模块成员导入后有两种使用方式： 通过选择器直接在模板中使用，使用于组件/指令/管道 通过路由导航来使用，适用于导入的组件，不过更好的设计是将路由移至被导入模块，导入后合并路由即可 模块树模块树是组成angular的基本树之一，体现了应用的基本结构,angular一般可通过直接导入和懒加载两种方式来将各个模块联系在一起，下图是一个基本模块树的关联结构： 应用模块的组建方式一个angular应用一般有四种类型的模块： 引导模块(AppModule)，一般指根模块，用于引导和组织整个应用 核心模块(CoreModule)，用于封装一次性的类，隐藏它们的实现细节，一般包含只在应用启动时使用到的组件类和全应用级服务提供商，根模块导入它来获取相关能力 共享模块(ShareModule)，用于封装公共组件、指令和管道，共享给那些需要它们的模块， 特性模块(FeatrueModule)，用于封装工作流和业务功能 下图是一个应用中模块的典型组建方式 最后，一些需要注意的细节： 根模块和特性模块共享着相同的执行环境和同一个依赖注入器，在某个模块中定义的服务在所有其他模块中也都能用。特性模块通过自己提供的服务和对外公开的组件、指令、管道来与其它模块进行协同工作 在根注入器注册的提供商，每个服务均为单例，在全应用范围的组件都可使用，无论组件时主动导入还是惰性加载的 共享模块中不应出现providers服务商，否则如果一个惰性加载模块导入了此共享模块，就会相应生成一份服务的实例，这个在设计中时不被期望的 导入目标模块不会继承被导入模块中对组件、指令或管道的访问权，两个模块的imports数组是互不相干的，除非被导入模块将导入模块重新导出。所以，对公共模块的使用，并不是在根模块导入一次就可以了，而应该在每一个需要使用的模块中都需要导入 被导入模块的公开指令的优先级小于导入目标模块的指令，渲染时先执行导入的后执行本模块的，如果有同名指令存在，本模块的覆盖导入的；而如果在本模块的declarations如果有同名指令，后申明的覆盖先申明的 多次导入同一个指令是没问题的，Angular 会移除重复的类，只注册一次。但如果有两个不同的类，只是恰好有相同的名字，angular认为并没有重复，会同时保留这两个指令，只是在使用的时候两个指令都会先后调用到，优先级高的获最后结果 显式添加到AppModule中的那些提供商在优先级上要优于从其它模块中导入的提供商 立即模块加载是直接导入，在应用启动时加载它的路由和组件；懒加载模块是通过路由进行惰性加载，指的是用户第一次访问时异步获取加载文件，加载速度取决于浏览器一次加载文件的数量，比如：谷歌一般一次8个，所以要规划好懒加载模块的大小，以免加载时间过长 对于惰性加载模块，一般不要直接导入使用，因为一般这种模块都会有自己的路由配置，导入的同时也会导入它的路由，会对目标模块的路由导航造成影响，因为路由匹配是第一次匹配到即胜出的原则，如果惰性模块的路由和目标模块相似，会引起不必要的错误","tags":[{"name":"Augular","slug":"Augular","permalink":"http://blueskyawen.com/tags/Augular/"}]},{"title":"Hexo博客添加评论模块","date":"2017-06-10T16:43:11.000Z","path":"2017/06/11/hexo-add-pinglun/","text":"写好的东西总希望和人一起讨论分享，下面来给博客增加评论系统Yilia组图集成了多说，网易云跟帖，畅言，Disqus等众多评论系统，只需要简单的设置即可实现功能在这以网易云跟帖为例子说明 注册账号点击这里到网易云跟帖网站，按照流程注册账号，登录之后进入后台管理，填写站点信息，网址时你申请的域名获取代码到主题的/themes/yilia/layout/_partial/post/wangyiyun.ejs文件下，替换其内容 配置主题文件在/themes/yilia/_config.yml中找到评论配置,将wangyiyun改成true #评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus 不需要使用某项，直接设置值为false，或注释掉 #具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/ #1、多说 duoshuo: false #2、网易云跟帖 wangyiyun: true #3、畅言 changyan_appid: false changyan_conf: false #4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的 disqus: false 重新执行Hexo命令三件套，重新部署站点，查看效果","tags":[{"name":"hexo","slug":"hexo","permalink":"http://blueskyawen.com/tags/hexo/"}]},{"title":"Hexo博客绑定个人域名","date":"2017-06-10T16:28:14.000Z","path":"2017/06/11/hexo-bind-domain/","text":"之前搭建完博客并且部署到github上以后，已经可以通过github.io地址来访问我的博客页面但这个地址这是仓库地址，缺乏个性，也为注册其他插件带来问题我在想，如果有自己的域名就好了，说干就干，由于已经在阿里云有了账号，下面以阿里云为例描述绑定域名的过程 1.购买域名进入阿里云官网，登录到域名购买页面输入个性的域名，查询注册情况，只要没被注册即可使用 2.身份认证注册完域名后，进入到自己的域名列表后需要进行个人信息填写和实名认证，这一步很重要，不然不能进行解析，一段时间后会被挂起状态，不能正常使用，所以还是认证的好，认证步骤有详细的提示，这里就不赘述了 3.域名解析进入到自己的域名列表，点击域名操作的解析，进入域名解析页面点击添加解析，填写配置： 类型–选择CNAME主机记录–@线路–默认记录值–填写博客仓库的名字：”your_github_name.github.io” 点击保存即可 4.仓库配置回到github仓库，在别根目录下增加名为CNAME的文件，内容为刚刚申请的域名为了防止以后部署提交会覆盖这个文件，可以在本地机子增加这个文件，然后PUSH到仓库里去 5.配置文件修改这个主要是要修改我们根目录的_config.yml，设置站点为/，否则如果存在子目录的话，部署后的主题会失效 # URL ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos; url: http://blueskyawen.com/ root: / 至此，域名更换和配置已经完全结束了，可以使用域名访问站点试试","tags":[{"name":"hexo","slug":"hexo","permalink":"http://blueskyawen.com/tags/hexo/"}]},{"title":"Hexo主题配置","date":"2017-06-10T16:19:19.000Z","path":"2017/06/11/hexo-theme/","text":"之前搭建的博客有自己默认的主题，个人不喜欢，觉得略丑，体验也不好，于是懂了更换主题的念头。Hexo主题非常多，官网上主题库里有很多优秀的主题，大家可以根据自己的喜好来选择合适的主题由于Hexo是一款非常优秀的开源博客系统，所以github上也有大量的主题可供选择下面是github上star数量最多的前10个主题： iissnan/hexo-theme-next， 3510个star。litten/hexo-theme-yilia， 1703个star。TryGhost/Casper， 679个star。wuchong/jacman， 503个star。A-limon/pacman， 431个star。daleanthony/uno， 416个star。orderedlist/modernist， 367个star。AlxMedia/hueman， 336个star。kathyqian/crisp-ghost-theme， 303个star。xiangming/landscape-plus， 287个star。 我用的就是hexo-theme-yilia，感觉这个主题页面简单，正合心意1.clone主题代码在博客目录下执行命令clone主题代码： $ git clone https://github.com/litten/hexo-theme-yilia.git themes/yilia 完事在主题目录themes里增加yilia的主题代码 2.配置主题在博客根目录的_config.yml文件中，配置新主题 3.修改主题配置信息修改themes/yilia/_config.yml文件，修改的时候，每个冒号后面都需要留一个英文空格，不然报错，下面时我的配置文件，仅供参考 # Header menu: 主页: / 归档: /archives 随笔: /categories/随笔 相册: /photos # SubNav subnav: github: &quot;https://github.com/blueskyawen&quot; weibo: &quot;#&quot; rss: &quot;#&quot; zhihu: &quot;#&quot; qq: &quot;#&quot; #weixin: &quot;#&quot; #jianshu: &quot;#&quot; #mail: &quot;mailto:litten225@qq.com&quot; #facebook: &quot;#&quot; #google: &quot;#&quot; #twitter: &quot;#&quot; #linkedin: &quot;#&quot; rss: /atom.xml # 是否需要修改 root 路径 # 如果您的网站存放在子目录中，例如 http://yoursite.com/blog， # 请将您的 url 设为 http://yoursite.com/blog 并把 root 设为 /blog/。 root: / # Content # 文章太长，截断按钮文字 excerpt_link: more # 文章卡片右下角常驻链接，不需要请设置为false show_all_link: &apos;展开全文&apos; # 数学公式 mathjax: false # 是否在新窗口打开链接 open_in_new: false fancybox: true top: true # 是否开启动画效果 animate: true # 打赏 # 请在需要打赏的文章的md文件头部，设置属性reward: true # 打赏基础设定：0-关闭打赏； 1-文章对应的md文件里有reward:true属性，才有打赏； 2-所有文章均有打赏 reward_type: 2 # 打赏wording reward_wording: &apos;请随意打赏&apos; # 支付宝二维码图片地址，跟你设置头像的方式一样。比如：/assets/img/alipay.jpg alipay: /images/IMG_zhifubao.jpg # 微信二维码图片地址 weixin: /images/IMG_weixin.jpg # Miscellaneous分析统计工具 baidu_analytics: &apos;&apos; #google_analytics: &apos;&apos; favicon: /images/favicon.jpg #你的头像url avatar: /images/touxiang.jpg #是否开启分享 share_jia: true share_addthis: false #评论：1、多说；2、网易云跟帖；3、畅言；4、Disqus 不需要使用某项，直接设置值为false，或注释掉 #具体请参考wiki：https://github.com/litten/hexo-theme-yilia/wiki/ #1、多说 duoshuo: false #2、网易云跟帖 wangyiyun: true #3、畅言 changyan_appid: false changyan_conf: false #4、Disqus 在hexo根目录的config里也有disqus_shortname字段，优先使用yilia的 disqus: false # 样式定制 - 一般不需要修改，除非有很强的定制欲望… style: # 头像上面的背景颜色 header: &apos;#003f80&apos; # 右滑板块背景 slider: &apos;linear-gradient(200deg,#a0cfe4,#e8c37e)&apos; # slider的设置 slider: # 是否默认展开tags板块 showTags: false # 智能菜单 # 如不需要，将该对应项置为false # 比如 #smart_menu: # friends: false smart_menu: innerArchive: &apos;所有文章&apos; friends: &apos;链接&apos; aboutme: &apos;关于我&apos; friends: 天猫商城: https://www.tmall.com 阿里云: https://www.aliyun.com 携程: http://www.ctrip.com ZTE: http://www.zte.com.cn aboutme: 前端菜鸟&lt;br&gt;正在学习的路上前行&lt;br&gt;现就职于某通讯企业&lt;br&gt;长路漫漫，渐行渐远 4.查看主题效果仍然使用命令三件套来重新生成和部署站点，效果如下：","tags":[{"name":"hexo","slug":"hexo","permalink":"http://blueskyawen.com/tags/hexo/"}]},{"title":"hexo搭建个人博客","date":"2017-05-31T16:21:20.000Z","path":"2017/06/01/hexo-build-blok/","text":"一直想有一个自己的站点，用来写点东西，记录学习和生活偶然的机会，见识到了同事的博客，体验甚好，更加触动了自己搭建个人站点的想法从同事了解了下是用Hexo来搭建的，Hexo是一个超轻量级的博客系统，搭建起来很方便，我时自己百度各种资料，上官网学习，一步步搭建起来的，过程中也遇到各种问题，现总结一下，希望有所用。 一. 安装node.js和npm网上的安装指导教程很多，根据机器系统的不同有所不同，我的机子时ubuntu的，我是使用apt-get命令安装的 $ sudo apt-get install nodejs $ sudo apt-get install npm 看版本号有东西说明安装成功了 $ node -v v7.10.0 $ npm -v 4.2.0 推荐在线教程：菜鸟教程-Node.js 安装配置 二. 安装gitgit的安装方式也较多，可以百度搜一下，我是用apt-get安装的 $ apt-get install libcurl4-gnutls-dev libexpat1-dev gettext \\ libz-dev libssl-dev $ apt-get install git-core $ git --version git version 2.9.3 推荐在线教程：菜鸟教程-Git 安装配置 三. 注册github点击上github官网，按照网站提示注册就可以了，注册成功后要去自己的邮箱验证接下来设置SSH-Key链接 ssh-keygen -t rsa -C &quot;email_name@163.com&quot; Generating public/private rsa key pair. Enter file in which to save the key (/Users/root/.ssh/id_rsa): -&gt;按回车 Enter passphrase (empty for no passphrase): -&gt;输入密码 Enter same passphrase again: -&gt;再次输入密码 然后在个人账号的setting-&gt;SSH and GPG keys里点击Add SSH Key添加公开密钥即可，密钥为刚刚生成的id_rsa.pub文件里的内容，官网里也有添加SSH指导 四. 建立blog仓库官网有个给初学者提供的github的hello-world指导文档，可以先熟悉仓库的建设和分支管理创建博客仓库主要是创建和用户名对于的仓库，比如github用户名时blueskyawen,仓库名就叫blueskyawen.github.io创建github page进入刚刚创建的博客代理仓库，选择Settings进入设置页面，在GitHub Pages配置页面和主题,然后既可以通过地址:’your_name.github.io’来访问站点页面了 五. 安装配置Hexo这里时核心也是最重要的部分，有时间的人可以阅读hexo官网文档来学习全局安装hexo npm install hexo-cli -g 或 npm install -g hexo-cli 查看版本，有说明安装成功 hexo -v hexo-cli: 1.0.2 os: Linux 4.8.0-52-generic linux x64 http_parser: 2.7.0 node: 7.10.0 v8: 5.5.372.43 uv: 1.11.0 zlib: 1.2.11 ares: 1.10.1-DEV modules: 51 openssl: 1.0.2k icu: 58.2 unicode: 9.0 cldr: 30.0.3 tz: 2016j 初始化hexo hexo init blog cd blog npm install 启动服务，正常时这样的 hexo server INFO Start processing INFO Hexo is running at http://localhost:4000/. Press Ctrl+C to stop. 在浏览器里输入以下地址访问页面：http://localhost:4000/ 部署到github先安装hexo-deployer npm install hexo-deployer-git --save 然后到博客根目录的_config.yml文件，找到deploy配置位置，填写上仓库地址，地址就是刚刚创建的那个github仓库的地址，可以从仓库首页面clone or download下拉框里直接拷贝然后出入下面的命令三件套，每一次修改都可以使用这三件套来部署 hexo clean hexo g hexo d 提示你输入github的用户名和密码，就OK了，然后你就可以使用your_githubName.github.io来访问自己的站点了，效果和本地跑的一样 六. Hexo常用命令下面时一Hexo常用的命令，平时可能会经常用到，也可以使用hexo -help自己查看各种命令的使用方法，括号内时简写 hexo clean -- 清理缓存文件 hexo generate(g) -- 生成静态文件 hexo server(s) -- 启动服务 hexo deploy(d) -- 部署站点 hexo d -g -- 生成加部署 hexo new &quot;Name&quot; -- 新建文章 hexo new draft &quot;Name&quot; -- 新建草稿文档 hexo --draft -- 显示草稿 hexo publish [layout] filename -- 发布草稿","tags":[{"name":"Hexo","slug":"Hexo","permalink":"http://blueskyawen.com/tags/Hexo/"}]},{"title":"Markdown语法及编辑工具","date":"2017-05-29T09:19:02.000Z","path":"2017/05/29/markdown/","text":"花了好几天时间，终于把博客搭建好了。搭建博客是为了写点东西，记录下平时学习和生活的点滴，便于积累知识和查看。然而发现，记录文章是基于Markdown语法来书写的，所以在开始博客前先熟悉了下markdown语法，并对常用的一些语法作了下总结，基本可以满足平常的写作需求。 1. Markdown语法其实就是一种text to html的微语法，文本化的书写方式，最终还是由工具转化成html文档加以展示。 HTML兼容markdown语法对html标签是兼容的，在写作时可以随意使用html标签组织内容，但对于块级元素(比如:div)和行内元素标签(比如:span)和微语法的结合效果是不一样的:块级元素标签内markdown语法无效;而行内元素标签内markdown语法有效。 特殊字符的自动转化对于&amp; &lt; 这样的符号在html文档里有特殊意义的，但markdown会根据它们的使用场景进行自动转换，比如:当&lt;用于标签表示时工具不去理会，但是当只用于普通场景(3&lt;5)时会自动转化成对应的实体。 段落段落前后默认会有空行，如果需要在段落内换行，可敲2个空格加回车 标题markdown里有两种标题形式: 1). Setext # 标题1 ## 标题2 ### 标题3 #### 标题4 ##### 标题5 ###### 标题6 6级标题，#号越少，标题越高 2). atx 一级标题 ==== 二级标题 ---- 区块引用使用&gt;符号定义应用，可以多层嵌套 &gt; 外文引用 &gt; &gt; 外文引用 效果如下： 外文引用 外文引用 列表1). 无序列表:使用* + - 来构造无序列表 * 列表项目1 * 列表项目2 + 列表项目1 + 列表项目2 - 列表项目1 - 列表项目2 效果如下： 列表项目1 列表项目2 2). 有序列表:使用数字.来构造有序列表 1 列表项目1 2 列表项目2 效果如下： 列表项目1 列表项目2 注意：列表标记符号和项目内容之间须至少1个空格，最多3个空格 代码区块使用反引号`包围代码块，或者缩进4个空格来构造代码块，当代码块作为列表或引用的子元素时，可缩进到5个空格注意：代码块前后须加空行 分割线使用多个* - _ 来制造分隔线 *** --- ___ 效果如下：插入链接(1) 行内形式 [百度一下，你就知道](http://www.baidu.com &quot;baidu&quot;) 效果如下：百度一下，你就知道 (2) 参考形式 [百度一下，你就知道](1) [淘宝]() [1]: http://www.baidu.com &quot;baidu&quot; [淘宝]: http://www.taobao.com &quot;taobao&quot; 效果如下：百度一下，你就知道淘宝 注意：参考形式的url定义处和使用处须有空行，一般放在段落后面或文章最尾部 插入图像与链接类似，也分行内形式和参考形式 ![text](url &quot;title&quot;) ![text][id] [id]: url &quot;title&quot; 效果如下: 字体单个*斜体，俩个粗体 *斜体* **粗体** ***斜体+粗体*** 效果如下：斜体粗体斜体+粗体 表格| Left-Aligned | Center Aligned | Right Aligned | | :------------ |:---------------:| -----:| | col 3 is | some wordy text | $1600 | | col 2 is | centered | $12 | 效果如下： Left-Aligned Center Aligned Right Aligned col 3 is some wordy text $1600 col 2 is centered $12 其中，:—左对齐，:—:中间对齐，—:左对齐， 2. Markdown工具有许多的markdown语法转换工具，提供便捷书写和实时预览的功能，帮助方便的编辑文档，个人推荐以下，可在线编辑: Markdown plus: Markdown编辑器，可以支持添加任务列表、emoji、流程图等 作业部落: 在线 Markdown 编辑器推出桌面版客户端啦，全平台支援。 参考： Markdown 语法说明(简体中文版)-http://www.appinn.com/markdown/","tags":[{"name":"写作","slug":"写作","permalink":"http://blueskyawen.com/tags/写作/"}]}]